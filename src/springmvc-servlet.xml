<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- scan the package and the sub package -->
	<context:component-scan base-package="com.tang.Controller" />

	<!-- 自动扫描该包,功能覆盖了context:annotation-config -->
<!-- <context:component-scan base-package="com.tang.service.impl">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
</context:component-scan> -->


	<!-- don't handle the static resource -->
	<mvc:default-servlet-handler />

	<!-- if you use annotation you must configure following setting -->
	<mvc:annotation-driven />

	<!-- configure the InternalResourceViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- =============================================================== -->
	<!-- Resources -->
	<!-- =============================================================== -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>  --> 
	<context:property-placeholder location="classpath:jdbc.properties" /> 

	<!-- =============================================================== -->
	<!-- Data Source -->
	<!-- =============================================================== -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbcDriverClassName}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${jdbcUsername}" />
		<property name="password" value="${jdbcPassword}" />
		<property name="maxActive" value="${jdbcMaxActive}" />
		<property name="maxIdle" value="${jdbcMaxIdle}" />
		<property name="maxWait" value="${jdbcMaxWait}" />
		<property name="defaultAutoCommit" value="true" />
	</bean> 
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
         destroy-method="close">
        <property name="driverClassName" value="${driverClassName}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
         <property name="password" value="${password}" />
        连接池启动时的初始值
         <property name="initialSize" value="${initialSize}" />
        连接池的最大值
         <property name="maxActive" value="${maxActive}" />
        最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
        <property name="maxIdle" value="${maxIdle}" />
          最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
        <property name="minIdle" value="${minIdle}" />
     </bean> -->
	
	
	
	<!-- 采用注解方式来配置事务。针对数据源的事务管理器 ，把我们定义的数据源注入到DataSourceTransactionManager类的属性dataSource中 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 引入命名空间： 1.xmlns:tx="http://www.springframework.org/schema/tx 2.http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 采用@Transaction注解方式使用事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 配置业务bean：PersonServiceBean -->
	<bean id="personService" class="com.tang.service.impl.PersonServiceBean">
		<!-- 向属性dataSource注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean> 
	<bean id="userService" class="com.tang.service.impl.UserServiceBean">
		<!-- 向属性dataSource注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean> 


</beans>